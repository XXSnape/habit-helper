from inline.callback.enums import ActionsHabitEnum
from inline.callback.factories import actions_with_habit_factory
from telebot import TeleBot
from telebot.types import CallbackQuery
from utils.cache_keys import (
    CONTEXT_KEY,
    HABITS_KEY,
    MAX_DATE_KEY,
    MIN_DATE_KEY,
    REASONS_KEY,
)
from utils.custom_calendar import (
    RU_LSTEP,
    CustomCalendar,
    get_completed_and_unfulfilled_dates,
)
from utils.output import get_date_designation
from utils.router_assistants.calendar import checking_habit_for_completion_by_date


def show_calendar(callback: CallbackQuery, bot: TeleBot) -> None:
    """
    –í—ã–≤–æ–¥–∏—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å –¥–∞—Ç–∞–º–∏, –∫–æ–≥–¥–∞ –ø—Ä–∏–≤—ã—á–∫–∏ –±—ã–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.
    :param callback: CallbackQuery
    :param bot: TeleBot

    """
    number = int(actions_with_habit_factory.parse(callback.data)["num_habit"])
    with bot.retrieve_data(callback.from_user.id, callback.from_user.id) as data:
        completed, not_completed = get_completed_and_unfulfilled_dates(
            number=number, data=data
        )
        if completed is None:
            bot.answer_callback_query(
                callback_query_id=callback.id,
                text="–≠—Ç–∞ –ø—Ä–∏–≤—ã—á–∫–∞ –ø–æ–∫–∞ –Ω–∏ —Ä–∞–∑—É –Ω–µ –±—ã–ª–∞ –æ—Ç–º–µ—á–µ–Ω–∞",
                show_alert=True,
            )
            return

        data[CONTEXT_KEY] = number
        min_date = data[HABITS_KEY][number][MIN_DATE_KEY]
        max_date = data[HABITS_KEY][number][MAX_DATE_KEY]
        name = data[HABITS_KEY][number]["name"]
    calendar, step = CustomCalendar(
        completed=completed,
        not_completed=not_completed,
        number=number,
        min_date=min_date,
        max_date=max_date,
        current_date=min_date,
    ).build()
    bot.edit_message_text(
        message_id=callback.message.id,
        chat_id=callback.message.chat.id,
        text=f"{get_date_designation(name)}\n\n–í—ã–±–µ—Ä–∏—Ç–µ {RU_LSTEP[step]}:",
        reply_markup=calendar,
    )


def process_date_selection(callback: CallbackQuery, bot: TeleBot) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è.
    –ü–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–µ—Ç –≥–æ–¥–∞, –º–µ—Å—è—Ü–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –¥–∞—Ç—É.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏—á–∏–Ω—É –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ –±—ã–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –ø—É—Å—Ç—É—é –∫–Ω–æ–ø–∫—É
    :param callback: CallbackQuery
    :param bot: TeleBot
    """
    with bot.retrieve_data(callback.from_user.id, callback.from_user.id) as data:
        number = data[CONTEXT_KEY]
        completed, not_completed = get_completed_and_unfulfilled_dates(
            number=number, data=data
        )
        reasons = data[HABITS_KEY][number][REASONS_KEY]
        min_date = data[HABITS_KEY][number][MIN_DATE_KEY]
        max_date = data[HABITS_KEY][number][MAX_DATE_KEY]
        name = data[HABITS_KEY][number]["name"]
    result, key, step = CustomCalendar(
        completed=completed,
        not_completed=not_completed,
        number=number,
        min_date=min_date,
        max_date=max_date,
        current_date=min_date,
    ).process(callback.data)
    if not result and key:
        bot.edit_message_text(
            f"{get_date_designation(name)}\n\n–í—ã–±–µ—Ä–∏—Ç–µ {RU_LSTEP[step]}:",
            callback.message.chat.id,
            callback.message.message_id,
            reply_markup=key,
        )
        return
    elif result:
        checking_habit_for_completion_by_date(
            bot=bot,
            callback=callback,
            result=result,
            completed=completed,
            reasons=reasons,
        )
    else:
        bot.answer_callback_query(
            callback_query_id=callback.id,
            text="–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ª–∏—à—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—èüòÅ",
            show_alert=True,
        )


def register_calendar(bot: TeleBot) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç show_calendar, process_date_selection
    :param bot: TeleBot
    """
    bot.register_callback_query_handler(
        show_calendar,
        pass_bot=True,
        func=None,
        config=actions_with_habit_factory.filter(action=str(ActionsHabitEnum.VIEW)),
    )
    bot.register_callback_query_handler(
        process_date_selection,
        func=CustomCalendar.func(),
        pass_bot=True,
    )
